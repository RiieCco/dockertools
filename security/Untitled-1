About this session:

During our work as penetration testers we found that there are a lot of vulnerabilities
being introduced in applications that could have been prevented in an early stage of development.

We can see the latest trend in integrating security tooling into CI/CD pipelines. However, security tooling 
integrated in your security pipe-lines will not cover the whole attack surface. This is because the 
tooling can never understand the full context of the applications functions and logic. 

On the other hand, resources in the form of manual verification can often be scarce and expensive. 

Where do we find the right balance between security test automation, manual verification?

Even more importantly, how do we train the developers understand the metrics and make security part
of their process?

This could been achieved by setting up an (S)SDLC, but what does a good (S)SDLC consists of?

This talk will guide everybody willing to take the maturity of their security to a higher level.

We do so by defining a complete (S)SDLC which will cover all different facets in the threat landscape and
correlating vulnerabilities making applications secure, by design. 




